{"ast":null,"code":"var _jsxFileName = \"/Users/michaelsabzevari/Desktop/personal_projects/react/calculator-app/src/component/Numbers/index.js\";\nimport React from 'react'; // import Operations from '../Operations'\n\nclass Numbers extends React.Component {\n  constructor() {\n    super();\n\n    this.getAddResult = event => {\n      let x = this.state.num1 + this.state.num2;\n      this.setState({\n        result: x\n      });\n    };\n\n    this.state = {\n      input: \"\",\n      num1: 0,\n      num2: 0,\n      result: 0\n    };\n    this.handleNum1Change = this.handleNum1Change.bind(this);\n    this.handleNum2Change = this.handleNum2Change.bind(this);\n  }\n\n  handleNum1Change(event) {\n    console.log(event.target.value);\n    this.setState({\n      num1: event.target.value\n    });\n  }\n\n  handleNum2Change(event) {\n    this.setState({\n      num2: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"row m-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      onChange: this.handleNum1Change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      onChange: this.handleNum2Change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.getAddResult,\n      value: \"add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"+\"));\n  }\n\n}\n\nexport default Numbers;","map":{"version":3,"sources":["/Users/michaelsabzevari/Desktop/personal_projects/react/calculator-app/src/component/Numbers/index.js"],"names":["React","Numbers","Component","constructor","getAddResult","event","x","state","num1","num2","setState","result","input","handleNum1Change","bind","handleNum2Change","console","log","target","value","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,GAAE;AACT;;AADS,SAsBbC,YAtBa,GAsBGC,KAAD,IAAW;AACtB,UAAIC,CAAC,GAAG,KAAKC,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWE,IAArC;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAEL;AAAV,OAAd;AACH,KAzBY;;AAET,SAAKC,KAAL,GAAa;AACTK,MAAAA,KAAK,EAAE,EADE;AAETJ,MAAAA,IAAI,EAAE,CAFG;AAGTC,MAAAA,IAAI,EAAE,CAHG;AAITE,MAAAA,MAAM,EAAE;AAJC,KAAb;AAMA,SAAKE,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACH;;AACDD,EAAAA,gBAAgB,CAACR,KAAD,EAAQ;AACpBW,IAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACa,MAAN,CAAaC,KAAzB;AACA,SAAKT,QAAL,CAAc;AACVF,MAAAA,IAAI,EAAEH,KAAK,CAACa,MAAN,CAAaC;AADT,KAAd;AAGH;;AACDJ,EAAAA,gBAAgB,CAACV,KAAD,EAAQ;AACpB,SAAKK,QAAL,CAAc;AACVD,MAAAA,IAAI,EAAEJ,KAAK,CAACa,MAAN,CAAaC;AADT,KAAd;AAGH;;AAMDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,QAAQ,EAAE,KAAKP,gBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,QAAQ,EAAE,KAAKE,gBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAQ,MAAA,OAAO,EAAE,KAAKX,YAAtB;AAAoC,MAAA,KAAK,EAAC,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHJ,CADJ;AA6BH;;AA1DiC;;AA4DtC,eAAeH,OAAf","sourcesContent":["import React from 'react'\n// import Operations from '../Operations'\n\nclass Numbers extends React.Component {\n    constructor(){\n        super()\n        this.state = {\n            input: \"\",\n            num1: 0,\n            num2: 0,\n            result: 0\n        }\n        this.handleNum1Change = this.handleNum1Change.bind(this)\n        this.handleNum2Change = this.handleNum2Change.bind(this)\n    }\n    handleNum1Change(event) {\n        console.log(event.target.value)\n        this.setState({\n            num1: event.target.value \n        })\n    }\n    handleNum2Change(event) {\n        this.setState({\n            num2: event.target.value\n        })\n    }\n    getAddResult = (event) => {\n        let x = this.state.num1 + this.state.num2\n        this.setState({ result: x })\n    }\n\n    render() {\n        return (\n            <div className=\"row m-3\">\n                <input type=\"number\" onChange={this.handleNum1Change} />\n                <input type=\"number\" onChange={this.handleNum2Change} />\n                <button onClick={this.getAddResult} value=\"add\">+</button>\n                {/* <div>\n                    <h1>{this.state.input}</h1>\n                </div>\n                <div className=\"col-sm\">\n                    <button onClick={this.handleClick} value=\"1\" className=\"btn btn-dark m-1 btn-lg\">1</button>\n                    <button onClick={this.handleClick} value=\"2\" className=\"btn btn-dark m-1 btn-lg\">2</button>\n                    <button onClick={this.handleClick} value=\"3\" className=\"btn btn-dark m-1 btn-lg\">3</button>\n                    <br />\n                    <button onClick={this.handleClick} value=\"4\" className=\"btn btn-dark m-1 btn-lg\">4</button>\n                    <button onClick={this.handleClick} value=\"5\" className=\"btn btn-dark m-1 btn-lg\">5</button>\n                    <button onClick={this.handleClick} value=\"6\" className=\"btn btn-dark m-1 btn-lg\">6</button>\n                    <br />\n                    <button onClick={this.handleClick} value=\"7\" className=\"btn btn-dark m-1 btn-lg\">7</button>\n                    <button onClick={this.handleClick} value=\"8\" className=\"btn btn-dark m-1 btn-lg\">8</button>\n                    <button onClick={this.handleClick} value=\"9\" className=\"btn btn-dark m-1 btn-lg\">9</button>\n                    <br />\n                    <button onClick={this.handleClick} value=\"0\" className=\"btn btn-dark m-1 btn-lg\">0</button>\n                </div>\n                {/* <Operations /> */}\n                {/* <div> */}\n                {/* <button onClick={this.getAddResult}>+</button> */}\n                {/* </div>  */}\n            </div>\n        )\n    }\n}\nexport default Numbers"]},"metadata":{},"sourceType":"module"}